<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freevpnlist.github.io/news/article-84334.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>双向带头循环链表（详解）</title>
        <meta name="description" content="双向链表的定义 双向链表也叫双链表，是链表的一种，它的每个数据结点中都有两个指针，分别指向直接后继和直接前驱。所以，从双向链表中的任意一个结点开始，都可以很方便地访问它的前驱结点和后继结点。 下图为双" />
        <link rel="icon" href="/assets/website/img/clashvergerev/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="免费VPN列表推荐 订阅机场节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freevpnlist.github.io/news/article-84334.htm" />
    <meta property="og:site_name" content="免费VPN列表推荐 订阅机场节点官网" />
    <meta property="og:title" content="双向带头循环链表（详解）" />
    <meta property="og:image" content="https://freevpnlist.github.io/uploads/20240722-1/25c036125d8a30a85d01013a84ed1e90.webp" />
        <meta property="og:release_date" content="2025-03-30T09:31:07" />
    <meta property="og:updated_time" content="2025-03-30T09:31:07" />
        <meta property="og:description" content="双向链表的定义 双向链表也叫双链表，是链表的一种，它的每个数据结点中都有两个指针，分别指向直接后继和直接前驱。所以，从双向链表中的任意一个结点开始，都可以很方便地访问它的前驱结点和后继结点。 下图为双" />
        
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/bootstrap-4.5.0.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/animate.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/LineIcons.2.0.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/owl.carousel.2.3.4.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/owl.theme.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/nivo-lightbox.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/main.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/responsive.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="双向带头循环链表（详解）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KVMHR9VKMC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-KVMHR9VKMC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <header class="blog-hero-area">
                <div class="overlay">
            <span></span>
            <span></span>
        </div>
        <div class="navbar-area">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <nav class="navbar navbar-expand-lg">
                            <a class="navbar-brand" href="/">
                                                            <span>免费VPN列表推荐</span>
                                                        </a>
                            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                                <ul id="nav" class="navbar-nav ml-auto">
                                                                        <li class="nav-item">
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/client.htm">客户端</a>
                                    </li>
                                                                    </ul>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <div id="home">
            <div class="container">
                <div class="row justify-content-lg-center">
                    <div class="col-lg-10">
                        <div class="contents text-center">
                            <h1>双向带头循环链表（详解）</h1>
                            <div class="post-meta">
                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <section id="business-plan">
        <div class="container pt-5">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2> <a id="_0" rel="nofollow"></a>双向链表的定义</h2> <p><strong>双向链表也叫双链表，是链表的一种，它的每个数据结点中都有两个指针，分别指向直接后继和直接前驱。所以，从双向链表中的任意一个结点开始，都可以很方便地访问它的前驱结点和后继结点。<br /> 下图为双向链表的带头结构图。</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/0cf634052a29984c6f76a91c862d44dc.jpg" alt="双向带头循环链表（详解）"><br /><strong>下图为双向链表不带头结构图</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230119/ec226088753b3a4bf9fae5bd89a1351c.jpg" alt="双向带头循环链表（详解）"></p> <p>这里我们在定义双向链表的时候，一个结点里面的next存储的下一个结点的地址，prev存储的是上一个结点的地址，这里我们就会将其链接起来。</p> <h2> <a id="_9" rel="nofollow"></a>头文件</h2> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">once</span></span>  <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;assert.h&gt;</span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h&gt;</span></span>   <span class="token keyword">typedef</span> <span class="token keyword">int</span>  LTDateType<span class="token punctuation">;</span>  <span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">ListNode</span> <span class="token punctuation">{<!-- --></span> 	LTDateType data<span class="token punctuation">;</span> 	<span class="token keyword">struct</span> <span class="token class-name">ListNode</span><span class="token operator">*</span> next<span class="token punctuation">;</span> 	<span class="token keyword">struct</span> <span class="token class-name">ListNode</span><span class="token operator">*</span> prev<span class="token punctuation">;</span> <span class="token punctuation">}</span>LTNode<span class="token punctuation">;</span>   <span class="token comment">//初始化</span> LTNode<span class="token operator">*</span> <span class="token function">ListInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//申请新的结点</span> LTNode<span class="token operator">*</span> <span class="token function">BuyListNode</span><span class="token punctuation">(</span>LTDateType x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//尾插</span> <span class="token keyword">void</span> <span class="token function">ListPushBack</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//尾删</span> <span class="token keyword">void</span> <span class="token function">ListPopBack</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//头插</span> <span class="token keyword">void</span> <span class="token function">ListPushFront</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//头删</span> <span class="token keyword">void</span> <span class="token function">ListPopFront</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//打印</span> <span class="token keyword">void</span> <span class="token function">ListPrint</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//查找</span> LTNode<span class="token operator">*</span> <span class="token function">ListFind</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//在pos位置之前进行插入</span> <span class="token keyword">void</span> <span class="token function">ListInsert</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> pos<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//删除pos位置的结点</span> <span class="token keyword">void</span> <span class="token function">ListErase</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h2> <a id="_49" rel="nofollow"></a>接口的实现</h2> <h3> <a id="1_50" rel="nofollow"></a>1、新节点的申请以及初始化链表</h3> <pre><code class="prism language-c"><span class="token comment">//申请新的结点</span> LTNode<span class="token operator">*</span> <span class="token function">BuyListNode</span><span class="token punctuation">(</span>LTDateType x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	LTNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token punctuation">(</span>LTNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>LTNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	newnode<span class="token operator">-&gt;</span>data <span class="token operator">=</span> x<span class="token punctuation">;</span> 	newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> 	newnode<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> 	<span class="token keyword">return</span> newnode<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">//初始化</span> LTNode<span class="token operator">*</span> <span class="token function">ListInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token comment">//哨兵位的头节点</span> 	LTNode<span class="token operator">*</span> phead <span class="token operator">=</span> <span class="token punctuation">(</span>LTNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>LTNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	phead<span class="token operator">-&gt;</span>next <span class="token operator">=</span> phead<span class="token punctuation">;</span> 	phead<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> phead<span class="token punctuation">;</span> 	<span class="token keyword">return</span> phead<span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="2_71" rel="nofollow"></a>2、链表的头插尾插</h3> <pre><code class="prism language-c"><span class="token comment">//头插</span> <span class="token keyword">void</span> <span class="token function">ListPushFront</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token function">BuyListNode</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> next <span class="token operator">=</span> phead<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span> 	phead<span class="token operator">-&gt;</span>next <span class="token operator">=</span> newnode<span class="token punctuation">;</span> 	newnode<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> phead<span class="token punctuation">;</span> 	newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span> 	next<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> newnode<span class="token punctuation">;</span>  	<span class="token comment">//调用ListInsert也可以实现头插</span> 	<span class="token comment">//ListInsert(phead-&gt;next, x);</span>  <span class="token punctuation">}</span> <span class="token comment">//尾插</span> <span class="token keyword">void</span> <span class="token function">ListPushBack</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span>  	LTNode<span class="token operator">*</span> tail <span class="token operator">=</span> phead<span class="token operator">-&gt;</span>prev<span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token function">BuyListNode</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> 	tail<span class="token operator">-&gt;</span>next <span class="token operator">=</span> newnode<span class="token punctuation">;</span> 	newnode<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> tail<span class="token punctuation">;</span> 	newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> phead<span class="token punctuation">;</span> 	phead<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> newnode<span class="token punctuation">;</span>  	<span class="token comment">//调用ListInsert也可以实现尾插</span> 	<span class="token comment">//ListInsert(phead, x);</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="3_104" rel="nofollow"></a>3、链表的头删尾删</h3> <pre><code class="prism language-c"><span class="token comment">//头删</span> <span class="token keyword">void</span> <span class="token function">ListPopFront</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token operator">-&gt;</span>next <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> next <span class="token operator">=</span> phead<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> next2 <span class="token operator">=</span> next<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span> 	phead<span class="token operator">-&gt;</span>next <span class="token operator">=</span> next2<span class="token punctuation">;</span> 	next2<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> phead<span class="token punctuation">;</span> 	<span class="token function">free</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token comment">//尾删</span> <span class="token keyword">void</span> <span class="token function">ListPopBack</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token operator">-&gt;</span>next <span class="token operator">!=</span> phead<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">//找到尾</span> 	LTNode<span class="token operator">*</span> tail <span class="token operator">=</span> phead<span class="token operator">-&gt;</span>prev<span class="token punctuation">;</span> 	phead<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> tail<span class="token operator">-&gt;</span>prev<span class="token punctuation">;</span> 	tail<span class="token operator">-&gt;</span>prev<span class="token operator">-&gt;</span>next <span class="token operator">=</span> phead<span class="token punctuation">;</span>  	<span class="token function">free</span><span class="token punctuation">(</span>tail<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> </code></pre> <h3> <a id="3_132" rel="nofollow"></a>3、链表的查找</h3> <pre><code class="prism language-c"><span class="token comment">//查找</span> LTNode<span class="token operator">*</span> <span class="token function">ListFind</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span>  	LTNode<span class="token operator">*</span> cur <span class="token operator">=</span> phead<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span> 	<span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> phead<span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		<span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token operator">-&gt;</span>data <span class="token operator">==</span> x<span class="token punctuation">)</span> 		<span class="token punctuation">{<!-- --></span> 			<span class="token keyword">return</span> cur<span class="token punctuation">;</span> 		<span class="token punctuation">}</span> 		cur <span class="token operator">=</span> cur<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="4pospos_151" rel="nofollow"></a>4、在pos位置之前进行插入以及删除pos位置的结点</h3> <pre><code class="prism language-c"><span class="token comment">//在pos位置之前进行插入</span> <span class="token keyword">void</span> <span class="token function">ListInsert</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> pos<span class="token punctuation">,</span> LTDateType x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> newnode <span class="token operator">=</span> <span class="token function">BuyListNode</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> posprev <span class="token operator">=</span> pos<span class="token operator">-&gt;</span>prev<span class="token punctuation">;</span> 	posprev<span class="token operator">-&gt;</span>next <span class="token operator">=</span> newnode<span class="token punctuation">;</span> 	newnode<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> posprev<span class="token punctuation">;</span> 	newnode<span class="token operator">-&gt;</span>next <span class="token operator">=</span> pos<span class="token punctuation">;</span> 	pos<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> newnode<span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token comment">//删除pos位置的结点</span> <span class="token keyword">void</span> <span class="token function">ListErase</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> pos<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> posnext <span class="token operator">=</span> pos<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span> 	LTNode<span class="token operator">*</span> posprev <span class="token operator">=</span> pos<span class="token operator">-&gt;</span>prev<span class="token punctuation">;</span> 	posnext<span class="token operator">-&gt;</span>prev <span class="token operator">=</span> posprev<span class="token punctuation">;</span> 	posprev<span class="token operator">-&gt;</span>next <span class="token operator">=</span> posnext<span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="5_175" rel="nofollow"></a>5、链表的打印</h3> <pre><code class="prism language-c"><span class="token comment">//打印</span> <span class="token keyword">void</span> <span class="token function">ListPrint</span><span class="token punctuation">(</span>LTNode<span class="token operator">*</span> phead<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">assert</span><span class="token punctuation">(</span>phead<span class="token punctuation">)</span><span class="token punctuation">;</span>  	LTNode<span class="token operator">*</span> cur <span class="token operator">=</span> phead<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span> 	<span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> phead<span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> cur<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> 		cur <span class="token operator">=</span> cur<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p><em><strong>但是相对于双向带头链表来说，有下面的优缺点：</strong></em><br /><strong>优点</strong><br /><strong>1、在任意位置插入删除效率高。O(1)</strong><br /><strong>2、按需申请空间</strong><br /><strong>缺点</strong><br /><strong>1、不支持随机访问。(下标访问)意味着一些快排，二分查找在这种结构上不适用</strong></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-84333.htm">JS实现数码时钟</a></p>
                                        <p>下一个：<a href="/news/article-85049.htm">动物医院需要什么设备呢英文（动物医院需要什么设备呢英文）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-12-free-node-subscribe-links.htm" title="免费VPN列表推荐 | 3月12日20.8M/S|免费Clash/Shadowrocket/V2ray/SSR免费节点订阅分享">免费VPN列表推荐 | 3月12日20.8M/S|免费Clash/Shadowrocket/V2ray/SSR免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-27-node-share-links.htm" title="免费VPN列表推荐 | 3月27日20.7M/S|免费Shadowrocket/SSR/V2ray/Clash免费节点订阅分享">免费VPN列表推荐 | 3月27日20.7M/S|免费Shadowrocket/SSR/V2ray/Clash免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-74656.htm" title="宠物疫苗低温保存（宠物疫苗低温保存方法）">宠物疫苗低温保存（宠物疫苗低温保存方法）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-31-node-share-links.htm" title="免费VPN列表推荐 | 3月31日21M/S|免费V2ray/Shadowrocket/Clash/SSR免费节点订阅分享">免费VPN列表推荐 | 3月31日21M/S|免费V2ray/Shadowrocket/Clash/SSR免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-73307.htm" title="同城免费领养宠物猫的软件下载（在哪儿可以在同城免费领养猫）">同城免费领养宠物猫的软件下载（在哪儿可以在同城免费领养猫）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-5-free-high-speed-nodes.htm" title="免费VPN列表推荐 | 3月5日19.5M/S|免费SSR/Shadowrocket/V2ray/Clash免费节点订阅分享">免费VPN列表推荐 | 3月5日19.5M/S|免费SSR/Shadowrocket/V2ray/Clash免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-70660.htm" title="菜品展示柜一般保持什么温度">菜品展示柜一般保持什么温度</a></li>
                        <li class="py-2"><a href="/news/article-85764.htm" title="一件代发是无货源吗（一件代发无货源是什么意思）">一件代发是无货源吗（一件代发无货源是什么意思）</a></li>
                        <li class="py-2"><a href="/news/article-78047.htm" title="动物疫苗公司招聘条件 动物疫苗公司招聘条件要求">动物疫苗公司招聘条件 动物疫苗公司招聘条件要求</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-6-free-v2ray-subscribe.htm" title="免费VPN列表推荐 | 3月6日21M/S|免费SSR/Shadowrocket/V2ray/Clash免费节点订阅分享">免费VPN列表推荐 | 3月6日21M/S|免费SSR/Shadowrocket/V2ray/Clash免费节点订阅分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">5</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">88</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <footer>
    <section id="footer-Content">
        <div class="copyright">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="site-info text-center">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">免费VPN列表推荐 订阅机场节点官网</a> 版权所有
                            <br />
                            Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</footer>
<a href="#" class="back-to-top">
    <i class="lni lni-chevron-up"></i>
</a>
<div id="preloader">
    <div class="loader" id="loader-1"></div>
</div>
<script src="/assets/website/js/frontend/clashvergerev/vendor/modernizr-3.7.1.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/vendor/jquery-3.5.1-min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/popper.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/bootstrap-4.5.0.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/owl.carousel.2.3.4.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/nivo-lightbox.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/jquery.magnific-popup.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/form-validator.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/contact-form-script.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/main.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
<script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>